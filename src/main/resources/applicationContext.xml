<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
         
    <!-- 开启包扫描，并注册注解 -->
    <context:component-scan base-package="org.vote.*"/>
    
    <!-- 引入其他配置文件 -->
	<!-- <import resource="config/Action.xml"/>
	<import resource="config/Dao.xml"/>
	<import resource="config/Service.xml"/> -->
    
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
     
    <!-- 配置C3P0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 数据库连接相关信息 -->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
     
    <!-- 配置Hibernate的SessionFactory -->
    <bean id="sessionFactory" 
      class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>
         <!-- 数据表映射配置文件 -->
		 <property name="mappingLocations">
			<list>
				<value>classpath:hbm/User.hbm.xml</value>
			</list>
		 </property> 
        <!-- 配置Hibernate属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>      <!-- 是否展示SQL -->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 是否自动创建表结构 -->
                <prop key="current_session_context_class">thread</prop>
                <prop key="hibernate.format_sql">true</prop>    <!-- 格式化SQL -->
                <!-- SQL dialect(SQL 方言) -->
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>   
        <!-- 扫描并加载注解过的实体类 -->
        <property name="packagesToScan" value="org.vote.*.model"/>
    </bean>
     
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
     
    <!-- 开启通过注解@Transactional管理事务 -->
	<!-- 解决 org.hibernate.HibernateException: 
        Could not obtain transaction-synchronized Session for current 出错问题 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
    <!-- 配置事务增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 配置需要进行事务管理的方法，和事务传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/><!-- SUPPORTS表示如果存在事务，则支持当前的事务，如果没有就算了 -->
        </tx:attributes>
    </tx:advice>
     
    <!-- 配置切面 -->
    <aop:config>
        <!-- 配置切入点
            * org.ssh.service.*+.*(..)
                *：表示方法的作用域，*表示所有
                org.ssh.service.*：表示org.ssh.service下的任何包
                org.ssh.service.*+：表示org.ssh.service下的任何包及其子包
                *(..)：*表示任何方法，(..)表示方法的任何参数
         -->
        <aop:pointcut id="pointcut" expression="execution(* org.vote.*.service.*+.*(..))"/>
        <!-- 适配切入点和事务增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
    
    <!-- 用注解来向Spring容器注册Bean  -->
    <context:component-scan base-package="org.vote.dao.impl,org.vote.service.impl,org.vote.action"/>   

</beans>